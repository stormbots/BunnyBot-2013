// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


package org.usfirst.frc2811.BunnyBot2013.subsystems;

import org.usfirst.frc2811.BunnyBot2013.RobotMap;
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class BallManager extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController intakeMotor = RobotMap.ballManagerIntakeMotor;
    DigitalInput intakeSensor = RobotMap.ballManagerIntakeSensor;
    Solenoid ballBlocker = RobotMap.ballManagerBallBlocker;
    SpeedController climberMotor = RobotMap.ballManagerClimberMotor;
    DigitalInput ballExitSensor = RobotMap.ballManagerBallExitSensor;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private int ballcount;
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
        ballcount=0;
    }
    public int incrementInternalCountUp(){
        ballcount++;                
    return ballcount; 
    }
    public int ballcountget(){
        return ballcount;
    }
    public boolean getIntakeSensor(){
        return intakeSensor.get();
    }
    public void MovePiston(boolean way){
        ballBlocker.set(way);
    }
}

