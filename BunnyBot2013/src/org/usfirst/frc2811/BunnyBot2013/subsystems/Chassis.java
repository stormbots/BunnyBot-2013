// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


package org.usfirst.frc2811.BunnyBot2013.subsystems;

import org.usfirst.frc2811.BunnyBot2013.RobotMap;
import org.usfirst.frc2811.BunnyBot2013.commands.*;
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.command.Subsystem;
import org.usfirst.frc2811.BunnyBot2013.OI;


/**
 *
 */
public class Chassis extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController driveMotor1 = RobotMap.chassisDriveMotor1;
    SpeedController driveMotor2 = RobotMap.chassisDriveMotor2;
    SpeedController driveMotor3 = RobotMap.chassisDriveMotor3;
    SpeedController driveMotor4 = RobotMap.chassisDriveMotor4;
    RobotDrive robotDrive41 = RobotMap.chassisRobotDrive41;
    DoubleSolenoid gearShifter1 = RobotMap.chassisGearShifter1;
    DoubleSolenoid gearShifter2 = RobotMap.chassisGearShifter2;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
        setDefaultCommand(new TeleopCommand());
    }
    public void JoystickControl(Joystick stick) {
        double a = stick.getRawAxis(OI.FORE_BACK_STICK);
        a = (OI.LEFT_RIGHT_DIRECTION)? -a : a;
        double b = stick.getRawAxis(OI.FORE_BACK_STICK);
        b = (OI.LEFT_RIGHT_DIRECTION)? -b : b;
        manualControl(a,b);
    }
    public void manualControl(double a, double b){
        robotDrive41.arcadeDrive(a,b);
    }

}

